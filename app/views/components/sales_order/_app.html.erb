<template id="app">
  <div class="col-md-9">
    <div class="row">

      <div class="col-md-12">
        <!-- 客戶 -->
        <div class="col-md-offset-1">
          <customer-selector
            :customers="$store.state.options.customers"
            :customer="sales_order && sales_order.partner"
            :editable="editable">
          </customer-selector>

          <div>
            <div><label>狀態</label><span class="m-l">{{ sales_order.status }}</span></div>
            <div><label>訂單編號</label><span class="m-l">{{ sales_order.order_number }}</span></div>
          </div>
        </div>

        <div class="pull-right">
          <button @click="openPickListPage" class="btn btn-default">顯示撿貨單</button>
          <button v-if="sales_order.status === 'active'" @click="finalizeOrder" class="btn btn-primary">Finalize</button>
          <button v-if="sales_order.status === 'finalized'" @click="shipAll" class="btn btn-primary">Ship all</button>
        </div>
      </div>

      <div class="col-md-12"><hr></div>

      <div class="col-md-4">
        <div class="row">
          <!-- 客戶單據寄送至 -->
          <bill-to-location-selector
            :locations="$store.state.options.customer_locations"
            :location="sales_order && sales_order.bill_to_location"
            after-selected-dispatch-event="billToLocationSelected"
            label="單據寄送至"
            :editable="editable">
          </bill-to-location-selector>
        </div>
        <div class="row">
          <!-- 客戶貨品寄送至 -->
          <ship-to-location-selector
            :locations="$store.state.options.customer_locations"
            :location="sales_order && sales_order.ship_to_location"
            after-selected-dispatch-event="shipToLocationSelected"
            label="貨品寄送至"
            :editable="editable">
          </ship-to-location-selector>
        </div>
        <div class="row">
          <!-- 出貨倉庫 -->
          <ship-from-location-selector
            :locations="$store.state.options.stockable_locations"
            :location="sales_order && sales_order.ship_from_location"
            after-selected-dispatch-event="shipFromLocationSelected"
            label="出貨倉庫"
            :editable="editable">
          </ship-from-location-selector>
        </div>
      </div>

      <div class="col-md-4">
        <div class="form-group">
          <label>訂單日期</label>
          <span class="m-l">
            <input v-if="editable" type="date" @change="updateIssueDate">
            <span v-else>{{ sales_order.issued_on }}</span>
          </span>
        </div>

        <div class="form-group">
          <label>送貨日期</label>
          <span class="m-l">
            <input v-if="editable" type="date" @change="updateShipmentDate">
            <span v-else>{{ sales_order.expected_delivery_date }}</span>
          </span>
        </div>

        <div class="form-group">
          <label>Email</label>
          <span class="m-l">
            <input v-if="editable" type="text" @input="updateEmail">
            <span v-else>{{ sales_order.email }}</span>
          </span>
        </div>

        <div class="form-group">
          <label>電話</label>
          <span class="m-l">
            <input v-if="editable" type="text" @input="updatePhone">
            <span v-else>{{ sales_order.phone }}</span>
          </span>
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <label>價別</label>
          <select v-if="editable"><option disabled selected value="">-- WIP --</option></select>
          <span class="m-l" v-else>{{ "WIP" }}</span>
        </div>
        <div>
          <label>總金額</label>
          <select v-if="editable" @change="updateTaxTreatment">
            <option selected value="exclusive">稅外</option>
            <option value="inclusive">稅入</option>
          </select>
          <span class="m-l" v-else>{{ tax_treatment }}</span>
        </div>
      </div>

    </div>

    <div class="row"><hr></div>

    <div class="row">
      <line-item-selection-area
        :items="$store.state.options.items"
        :line_items="$store.state.sales_order_line_items"
        :editable="editable">
      </line-item-selection-area>
    </div>

    <div class="row"><hr class="m-t-lg"></div>

    <div class="row m-t">
      <div class="col-md-6 m-t">
        <textarea v-if="editable" @input="updateNotes" placeholder="備註:" rows="4" class="form-control input-sm"></textarea>
        <div v-if="!editable && sales_order.notes" class="bg-warning">
          <label>備註:</label><p>{{ sales_order.notes }}</p>
        </div>
      </div>
      <div class="col-md-3 col-md-offset-3">
        <ul class="list-group no-padding">
          <li class="list-group-item">
            <span>總數量</span>
            <span class="pull-right">{{ $store.getters.total_units }}</span>
          </li>
          <li class="list-group-item">
            <span>金額小計</span>
            <span class="pull-right">NT$ {{ $store.getters.subtotal }}</span>
          </li>
          <li class="list-group-item">
            <span>稅額</span>
            <span class="pull-right">NT$ {{ $store.getters.total_tax }}</span>
          </li>
          <li class="list-group-item">
            <span>總金額</span>
            <span class="pull-right">NT$ {{ $store.getters.total_amount }}</span>
          </li>
        </ul>
      </div>
    </div>

    <div v-if="editable" class="row"><hr class="m-t-xs"></div>

    <div v-if="editable" class="row m-t">
      <div class="pull-right">
        <button class="btn btn-default">取消</button>
        <button class="btn btn-default" @click="createOrder('draft')">存為草稿</button>
        <button class="btn btn-primary" @click="createOrder('active')">建立進貨單</button>
      </div>
    </div>

  </div>
</template>

<%= render 'components/sales_order/customer_selector' %>
<%= render 'components/sales_order/location_selector' %>
<%= render 'components/sales_order/line_item_selection_area' %>

<script type="text/javascript">
  var App = Vue.extend({
    template: '#app',
    components: {
      'customer-selector': CustomerSelector,
      'bill-to-location-selector': LocationSelector,
      'ship-to-location-selector': LocationSelector,
      'ship-from-location-selector': LocationSelector,
      'line-item-selection-area': LineItemSelectionArea,
    },
    props: {
      mode: String,
      sales_order_id: Number,
      sales_order: Object,
    },
    computed: {
      editable: function() {
        return this.mode === 'new' || this.mode === 'edit'
      },
      tax_treatment: function() {
        if (this.sales_order.tax_treatment === 'exclusive') { return '稅外' }
        else { return '稅外' }
      }
    },
    data: function() {
      return {}
    },
    created: function() {
      this.$store.commit('setupMode', this.mode)
    },
    ready: function() {
      if (this.mode === 'new' || this.mode === 'edit') {
        this.$store.dispatch('getCustomerList')
        this.$store.dispatch('getPriceList')
        this.$store.dispatch('getStockableLocationList')
        this.$store.dispatch('getItemList')
        this.$store.dispatch('addNewLineItem')
      }
      if (this.mode === 'show') {
        this.getSalesOrder(this.sales_order_id)
      }
    },
    methods: {
      updateIssueDate: function(e) {
        this.$store.commit('updateIssueDate', e.target.value)
      },
      updateShipmentDate: function(e) {
        this.$store.commit('updateShipmentDate', e.target.value)
      },
      updateEmail: function(e) {
        this.$store.commit('updateEmail', e.target.value)
      },
      updatePhone: function(e) {
        this.$store.commit('updatePhone', e.target.value)
      },
      updateTaxTreatment: function(e) {
        this.$store.commit('updateTaxTreatment', e.target.value)
      },
      updateNotes: function(e) {
        this.$store.commit('updateNotes', e.target.value)
      },
      createOrder: function(status) {
        this.$store.dispatch('createOrder', status)
      },
      // Fetch specific sales order
      getSalesOrder: function(id) {
        var that = this
        $.ajax({
          url: '/api/v1/sales_orders/' + id,
          method: 'GET',
          dataType: 'json',
        }).done(function(data) {
          that.$store.commit('setupSalesOrder', { sales_order: data.sales_order })
          that.getSalesOrderLineItems(data.sales_order.id)
        }).fail(function(err) {
          console.log(err)
          alert('Cannot get sales order')
        })
      },
      getSalesOrderLineItems: function(sales_order_id) {
        var that = this
        $.ajax({
          url: '/api/v1/sales_orders/' + sales_order_id + '/line_items',
          method: 'GET',
          dataType: 'json',
        }).done(function(data) {
          that.$store.commit('setupSalesOrderLineItems', { sales_order_line_items: data.sales_order_line_items })
        })
      },
      finalizeOrder: function() {
        var that = this
        $.ajax({
          url: '/api/v1/sales_orders/' + that.sales_order.id + '/finalize',
          method: 'PATCH',
          dataType: 'json',
        }).done(function(data) {
          that.$store.commit('setupSalesOrder', { sales_order: data.sales_order })
        })
      },
      shipAll: function() {
        var that = this
        $.ajax({
          url: '/api/v1/sales_orders/' + that.sales_order.id + '/shipments',
          method: 'POST',
          dataType: 'json'
        }).done(function(data) {
          location.reload(true)
        }).fail(function(err) {
          console.log(err.responseJSON)
          alert(err.responseJSON.errors)
        })
      },
      openPickListPage: function() {
        window.open('/papers/sales_orders/pick_lists/' + this.sales_order.id)
      }
    }
  })
</script>
