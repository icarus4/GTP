<template id="line-item-selector-component">
  <tr>
    <td></td>
    <td class="td-v-align" v-bind:class="{ 'has-error': line_item.errors.item_id }">
      <select v-if="edit_mode" class="input-sm form-control" v-model="line_item.item_id">
        <option selected disabled value="">-- 請選取商品 --</option>
        <option v-for="i in available_items" v-bind:value="i.id">{{ i.name }}</option>
      </select>
      <span v-else>{{ line_item.item.name }}</span>
    </td>
    <td class="td-v-align">
      <span class="text-danger">{{ line_item.errors.quantity }}</span>
      <input v-if="edit_mode" class="no-border no-outline" type="number" min="1" placeholder="數量" value="1" v-model="line_item.quantity" number>
      <span v-else>{{ line_item.quantity }}</span>
    </td>
    <td class="td-v-align">{{ available_count }}</td>
    <td class="td-v-align">
      <span class="text-danger">{{ line_item.errors.unit_price }}</span>
      <input v-if="edit_mode" class="no-border no-outline input-s-sm" type="number" min="0" placeholder="單價" v-model="line_item.unit_price" number>
      <span v-else>{{ line_item.unit_price }}</span>
    </td>
    <td class="td-v-align">
      <span class="text-danger">{{ line_item.errors.tax_rate }}</span>
      <input v-if="edit_mode" class="no-border no-outline input-s-sm" type="number" min="0" placeholder="稅率" v-model="line_item.tax_rate" number>%
      <span v-else>{{ line_item.tax_rate }}</span>
    </td>
    <td class="td-v-align">{{ total || 0 }}</td>
    <td v-if="edit_mode" class="td-v-align"><div @click="pressDeleteButton(index)" class="cursor-pointer"><i class="fa fa-trash-o"></i></div></td>
  </tr>
</template>

<script type="text/javascript">
var LineItemSelectorComponent = Vue.extend({
  template: '#line-item-selector-component',
  props: {
    edit_mode: {
      type: Boolean,
      default: false
    },
    line_item: Object,
    available_items: Array,
    index: Number
  },
  computed: {
    total: function() {
      var total = 0
      var unit_price = parseFloat(this.line_item.unit_price)
      if (_.isInteger(this.line_item.quantity) && _.isNumber(unit_price)) {
        total = this.line_item.quantity * unit_price
      }
      this.line_item.total = total
      return total
    },
    available_count: {
      get: function() {
        if (!_.isInteger(this.line_item.item_id)) {
          return ''
        }
        var that = this
        var selected_item = _.find(this.available_items, function(item) {
          return item.id == that.line_item.item_id
        })

        if (_.isUndefined(selected_item)) { // 當item list尚未下載完成前，selected_item為undefined
          return null
        }
        else {
          return parseInt(selected_item.available_count) + parseInt(this.line_item.quantity)
        }
      }
    }
  },
  methods: {
    pressDeleteButton: function(index) {
      this.$dispatch('press-delete-button', index)
    }
  }
})
</script>
