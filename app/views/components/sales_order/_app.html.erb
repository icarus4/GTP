<template id="app">
  <div class="col-md-9">
    <div class="row">
      <customer-selector :customers="$store.state.options.customers"></customer-selector>
      <hr>
      <div class="col-md-4">
        <div class="row"><bill-to-location-selector :locations="$store.state.options.customer_locations" after-selected-dispatch-event="billToLocationSelected" label="單據寄送至"></bill-to-location-selector></div>
        <div class="row"><ship-to-location-selector :locations="$store.state.options.customer_locations" after-selected-dispatch-event="shipToLocationSelected" label="貨品寄送至"></ship-to-location-selector></div>
        <div class="row"><ship-from-location-selector :locations="$store.state.options.stockable_locations" after-selected-dispatch-event="shipFromLocationSelected" label="出貨倉庫"></ship-from-location-selector></div>
      </div>
      <div class="col-md-4">
        <label>訂單日期</label><div><input type="date" @change="updateIssueDate"></div>
        <label>送貨日期</label><div><input type="date" @change="updateShipmentDate"></div>
        <label>Email</label><div><input type="text" @input="updateEmail"></div>
        <label>電話</label><div><input type="text" @input="updatePhone"></div>
      </div>
      <div class="col-md-4">
        <div><label>價別</label><select><option disabled selected value="">-- WIP --</option></select></div>
        <div>
          <label>總金額</label>
          <select @change="updateTaxTreatment">
            <option selected value="exclusive">稅外</option>
            <option value="inclusive">稅入</option>
          </select>
        </div>
      </div>

    </div>

    <div class="row"><hr></div>

    <div class="row">
      <line-item-selection-area
        :items="$store.state.options.items"
        :line_items="$store.state.sales_order_line_items">
      </line-item-selection-area>
    </div>

    <div class="row"><hr class="m-t-lg"></div>

    <div class="row m-t">
      <div class="col-md-6 m-t">
        <textarea @input="updateNotes" placeholder="備註:" rows="4" class="form-control input-sm"></textarea>
      </div>
      <div class="col-md-3 col-md-offset-3">
        <ul class="list-group no-padding">
          <li class="list-group-item">
            <span>總數量</span>
            <span class="pull-right">{{ $store.getters.total_units }}</span>
          </li>
          <li class="list-group-item">
            <span>金額小計</span>
            <span class="pull-right">NT$ {{ $store.getters.subtotal }}</span>
          </li>
          <li class="list-group-item">
            <span>稅額</span>
            <span class="pull-right">NT$ {{ $store.getters.total_tax }}</span>
          </li>
          <li class="list-group-item">
            <span>總金額</span>
            <span class="pull-right">NT$ {{ $store.getters.total_amount }}</span>
          </li>
        </ul>
      </div>
    </div>

    <div class="row"><hr class="m-t-xs"></div>

    <div class="row m-t">
      <div class="pull-right">
        <button class="btn btn-default">取消</button>
        <button class="btn btn-default" @click="createOrder('draft')">存為草稿</button>
        <button class="btn btn-primary" @click="createOrder('active')">建立進貨單</button>
      </div>
    </div>

  </div>
</template>

<%= render 'components/sales_order/customer_selector' %>
<%= render 'components/sales_order/location_selector' %>
<%= render 'components/sales_order/line_item_selection_area' %>

<script type="text/javascript">
  var App = Vue.extend({
    template: '#app',
    components: {
      'customer-selector': CustomerSelector,
      'bill-to-location-selector': LocationSelector,
      'ship-to-location-selector': LocationSelector,
      'ship-from-location-selector': LocationSelector,
      'line-item-selection-area': LineItemSelectionArea,
    },
    props: {
      mode: String
    },
    data: function() {
      return {}
    },
    created: function() {
      this.$store.commit('setupMode', this.mode)
    },
    ready: function() {
      if (this.$store.state.mode === 'new' || this.$store.state.mode === 'edit') {
        this.$store.dispatch('getCustomerList')
        this.$store.dispatch('getPriceList')
        this.$store.dispatch('getStockableLocationList')
        this.$store.dispatch('getItemList')
        this.$store.dispatch('addNewLineItem')
      }
    },
    methods: {
      updateIssueDate: function(e) {
        this.$store.commit('updateIssueDate', e.target.value)
      },
      updateShipmentDate: function(e) {
        this.$store.commit('updateShipmentDate', e.target.value)
      },
      updateEmail: function(e) {
        this.$store.commit('updateEmail', e.target.value)
      },
      updatePhone: function(e) {
        this.$store.commit('updatePhone', e.target.value)
      },
      updateTaxTreatment: function(e) {
        this.$store.commit('updateTaxTreatment', e.target.value)
      },
      updateNotes: function(e) {
        this.$store.commit('updateNotes', e.target.value)
      },
      createOrder: function(status) {
        this.$store.dispatch('createOrder', status)
      },
    }
  })
</script>
